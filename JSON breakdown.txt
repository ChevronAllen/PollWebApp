a POST is a JSON going from the client to the API
a GET is a JSON going from the API back to the client, in response to a POST


Register POST
=========================
{
  firstName: "",  // User's First Name
  lastName: "",   // User's Last Name
  optionalName: "",// user's optional identifier
  userEmail: "",  // User's Email
  password: "",   // User's Hashed Password
}

Register GET // wont login automatically
=========================
{
  error: ""       //  error description, only populated on error
}

Login POST
=========================
{
  userEmail: "",  // User's Email
  password: "",   // User's Hashed Password
}

Login GET
=========================
{
  id: "",                        //  The user's ID, error if  = 0
  firstName: "",                //  The firstName found
  lastName: "",                 //  The lastName found
  optionalName: "",
  dateCreated: "",
  sessionID: "",                //  sessionID generated
  error: ""                     //  Error description if id = 0
}


GetRoomByCode POST
=========================
{
  userID: "",               // optional user identification
  sessionID: "",            // verification of user
  pollCode: ""              // distributed code for access to poll
}


GetRoomByCode GET
=========================
{
  questions :
  [
    {
      questionID: "",
      roomID: "",
      questionText: "",
      choice1: "",
      ... ,
      choice16: ""
    },
    {

    }
  ],
  error: ""
}

CreateRoom POST
=========================
{
  userID: "",               // optional user identification
  sessionID: "",            // verification of user
  roomTitle: ""             // user input, Title of the Room
  roomPublic: ,             // 0 or 1 input indicating if room is answerable without identification
  startTime: "",            // start time in milliseconds
  expirationTime: ""        // end time in milliseconds
  questions :
  [
    {
      isLocked: ,           // is question accessible Boolean 1 / 0
      correctResponse: ,    // 0-16 single integer input of correct response, 0 indicates none
      questionText: "",     // text body
      choice1: "",          // choices text, empty if no choice
      ... ,
      choice16: ""
    },
    {

    }
  ]
}

CreateRoom GET
=========================
{
  roomID : "",      // created room ID
  roomCode : "",    // access code to distribute
  error : ""        // will be empty unless there was an error
}

DeleteRoom POST
=========================
{
  userID: "",               // user identification
  sessionID: "",            // verification of user
  roomID : "",              // room ID
}

DeleteRoom GET
=========================
{
  error : ""        // will be empty unless there was an error
}

AnswerQuestion POST
=========================
{
  userID: "",               // user identification
  sessionID: "",            // verification of user
  roomID: "",              // room ID
  questionID: "",           // questions id in the form roomId + question number
  choice: ,                // 1-16 single integer indicating choice
}

AnswerQuestion GET
=========================
{
  correctResponse: "",      // 0-16 indicating correct response, 0 if none
  error : ""                // will be empty unless there was an error
}

EditQuestion POST
=========================
{
  editOption: ,             // 0-3;
                            // 0 indicating you are only deleting a question
                            // 1 indicating you are only adding a question
                            // 2 indicating you are editing(delete then add new) a question
                            // 3 indicating you are only locking or unlocking question
  userID: "",               // user identification
  sessionID: "",            // verification of user
  roomID: "",               // room ID
  questionID: "",           // questions id in the form roomId + question number
  isLocked: ,               // is question accessible Boolean 1 / 0
  correctResponse: ,        // 0-16 single integer input of correct response, 0 indicates none
  questionText: "",         // text body
  choice1: "",              // choices text, empty if no choice
  ... ,
  choice16: ""
}

EditQuestion GET
=========================
{
  error : ""                // will be empty unless there was an error
}

// past this point needs major revision
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
// past this point needs major revision

Admin POST
=========================
{
  id: 0,                    // The user's ID, error if = 0
  sessionID: "",            // sessionID generated
}

Admin GET
=========================
{
  Room:                     // array of rooms
  [
    roomCode: "",
  ]
}

Room Created Modal POST
=========================
{
  id: "",
  sessionID: "",
  roomID: "",
  roomCode: "",
}

Room Created Modal GET
=========================
{

}

Room Answered Modal POST
=========================
{
  id: 0,
  sessionID: "",
  roomID: "",
  roomCode: "",
}

Room Answered Modal GET
=========================
{

}

Question Edit POST
=========================
{
  id: 0,
  sessionID: "",
  roomID: "",
  qID: "",
  qLocked: 0,                 // 0 to show, 1 to hide
}

Question Edit GET
=========================
{
  error: ""
}

Answer Question POST
=========================
{
  id: 0,
  sessionID: "",
  roomID: "",
  questionID: "",
  answerSelected: "",
}

Answer Question GET
=========================
{
  error: ""
}
