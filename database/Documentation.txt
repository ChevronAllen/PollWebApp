Never enter null values, if a value must be empty enter an empty string.
error 0 = success
error 1 = parameter error
error 2 = bad session (user should relogin)

===================
Registration
===================
CALL PollingZone.user_create( firstName,lastName,optionalName, email, password, salt)
firstName - user's submited first name
lastName - user's submitted last name 
optionalName - user's optional identifier
email - unique email address
password - SHA256 salted and hashed password
salt - salt used in password hashing

Returns single coloumn table userID. 
On success this is populated with the new user's id

===================
Login
=================== 
CALL PollingZone.user_login( email, password, session, error)
email - user email to attempt login under
password - client-side hashed but not salted password to match
session - OUT - returns users session on a successful login
error - OUT - returns 1 if there are parameter errors

Returns a table of userID, user_firstName, user_lastName, user_optionalName, date_created. 
On a failure doesnt return a table

===================
Logout
=================== 
CALL PollingZone.user_login( userID, sessionKey, error)
userID - user's unique user ID string
sessionKey - user's session key string
error - OUT - returns 1 if there are parameter errors





===================
Room Creation
===================
CALL PollingZone.room_create( userID, sessionKey, roomTitle, roomPublic, expirationDateTime, error)
userID - user's unique user ID string
sessionKey - user's session key string
roomTitle - user input, Title of the Room
roomPublic - user input, Boolean, true = anonymouse users can respond. false = only registered users may respond
startDateTime - exact Date-Time the room is active as a string in the format YYYYMMDDHHMMSS
expirationDateTime - exact Date-Time of expiration as a string in the format YYYYMMDDHHMMSS
error - OUT - returns 1 if there are parameter errors

Returns 2 coloumn table RoomID and RoomCode, with roomCode being the 6 character string

	===================
	Room Add Question
	===================
	CALL PollingZone.room_addQuestion( userID, SessionKey, roomID, correctChoice, questionText, questionChoice1,..., questionChoice16, error)
	userID - user's unique user ID string
	sessionKey - user's session key string
	roomID - room's full ID
	correctChoice - if 0 there are no correct answers otherwise
	questionText - The user input question
	questionChoiceN - the Nth multiple choice response to the quesiton (1 to 16)
	error - OUT - returns 1 if there are parameter errors
	
	Questions are added one by one since Registered users dont have a limit on the number of questions in thier rooms.

===================
Room Get Question
===================
CALL PollingZone.room_getQuestion( userID, sessionKey, roomID, questionID, OUT error)
userID - user's unique user ID string
sessionKey - user's session key string
roomID - room's full ID
questionID - questions id in the form roomId + question number
error - OUT - returns 1 if there are parameter errors

Returns Question 
questionID, 
roomID, 
userID, correctResponse, 
questionText,
 choice1, choice2, ... ,choice16

===================
Room Deletion
===================
CALL PollingZone.room_delete( userID, sessionKey, roomID, OUT error)
userID - user's unique user ID string
sessionKey - user's session key string
roomID - room's full ID
error - OUT - returns 1 if there are parameter errors


===================
Find Room by Code
===================
CALL PollingZone.room_getByCode( userID, SessionKey, roomCode, roomID, error)
userID - user's unique user ID string
sessionKey - user's session key string
roomCode - 6 Character Room Code to search for
error - OUT - returns 1 if there are parameter errors

Returns the questions of the Poll if you have access to it
questionID, 
roomID, 
userID, correctResponse, 
questionText,
 choice1, choice2, ... ,choice16
